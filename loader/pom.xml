<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>manPower</artifactId>
        <groupId>us.manpower</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>loader</artifactId>
    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <version>4.0.27.Final</version>
            <classifier>linux-x86_64</classifier>
        </dependency>

        <dependency>
            <groupId>us.manpower</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${snappy.version}</version>
        </dependency>

        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>${lz4.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${cli.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.5.0-b01</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20140107</version>
        </dependency>


    </dependencies>

    <profiles>
        <profile>
            <id>build-uber-jars</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>false</maven.test.skip>
                <uber-jar-name>command-line-loader</uber-jar-name>
            </properties>
            <build>
                <finalName>${uber-jar-name}-${project.version}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>2.3</version>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">

                                    <!-- note that the main class is set *here* -->

                                    <mainClass>us.catalist.mdr.loader.cli.CommandLineLoader</mainClass>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                    <resources>
                                        <resource>.md</resource>
                                        <resource>.zip</resource>
                                        <resource>.tsv</resource>
                                        <resource>.csv</resource>
                                        <resource>.cvs</resource>
                                        <resource>.pdf</resource>
                                        <resource>.sh</resource>
                                        <resource>.png</resource>
                                    </resources>
                                </transformer>
                            </transformers>
                            <relocations>
                                <relocation>
                                    <pattern>com.google.common</pattern>
                                    <shadedPattern>shaded.loader.com.google.common</shadedPattern>
                                </relocation>
                                <!--<relocation>-->
                                <!--<pattern>com.datastax</pattern>-->
                                <!--<shadedPattern>shaded.com.datastax</shadedPattern>-->
                                <!--</relocation>-->
                            </relocations>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>uber</shadedClassifierName>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>

                        </configuration>

                        <!-- Uber jar to be made for running command line loader -->
                        <executions>
                            <execution>
                                <id>command-line-loader</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <excludes>
                                            <exclude>org.scala-lang:*</exclude>
                                            <!--<exclude>log4j:*</exclude>-->
                                            <exclude>com.google.code.findbugs:*</exclude>
                                            <exclude>org.apache.poi:*</exclude>
                                            <exclude>ant:*</exclude>
                                        </excludes>
                                    </artifactSet>
                                    <shadedArtifactAttached>false</shadedArtifactAttached>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <!-- now make the jar chmod +x style executable -->
                        <groupId>org.skife.maven</groupId>
                        <artifactId>really-executable-jar-maven-plugin</artifactId>
                        <version>1.4.1</version>
                        <configuration>
                            <!-- value of flags will be interpolated into the java invocation -->
                            <!-- as "java $flags -jar ..." -->
                            <flags>
                                -XX:+UseBiasedLocking -XX:BiasedLockingStartupDelay=0 -XX:+UseFastAccessorMethods \
                                -XX:+RelaxAccessControlCheck -Xmx4G -XX:StringTableSize=100003 -Xverify:none \
                                -XX:+AggressiveOpts -XX:+UseCompressedOops \
                                -XX:+UseG1GC -XX:+UseStringDeduplication \
                                -Dio.netty.allocator.type=pooled
                            </flags>

                            <!-- (optional) name for binary executable, if not set will just -->
                            <!-- make the regular jar artifact executable -->
                            <programFile>${project.build.finalName}</programFile>

                            <!-- (optional) name for a file that will define what script gets -->
                            <!-- embedded into the executable jar.  This can be used to -->
                            <!-- override the default startup script which is -->
                            <!-- `#!/bin/sh -->
                            <!--            -->
                            <!-- exec java " + flags + " -jar "$0" "$@" -->
                            <!-- <scriptFile>src/packaging/someScript.extension</scriptFile> -->
                        </configuration>

                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>really-executable-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Custom installation procedures -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>2.4</version>
                        <executions>

                            <!-- This ensures that the uber jar gets installed as a Maven artifact to the local Maven repo -->
                            <execution>
                                <id>uber-jar-installation</id>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <file>target/${project.build.finalName}.jar</file>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${uber-jar-name}</artifactId>
                                    <version>${project.version}</version>
                                    <packaging>jar</packaging>
                                    <generatePom>true</generatePom>
                                </configuration>
                            </execution>

                            <!-- This ensures that the "really executable" binary gets installed as a Maven artifact to the local Maven repo -->
                            <execution>
                                <id>executable-binary-installation</id>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <file>target/${project.build.finalName}</file>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${uber-jar-name}-binary</artifactId>
                                    <version>${project.version}</version>
                                    <generatePom>true</generatePom>
                                    <packaging>sh</packaging>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                    <!-- Custom deployment procedures -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>2.7</version>
                        <executions>

                            <!-- This ensures that the uber jar gets installed as a Maven artifact to the remote Maven repo -->
                            <execution>
                                <id>uber-jar-deployment</id>
                                <goals>
                                    <goal>deploy-file</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <repositoryId>${project.distributionManagement.repository.id}</repositoryId>
                                    <url>${project.distributionManagement.repository.url}</url>
                                    <file>target/${project.build.finalName}.jar</file>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${uber-jar-name}</artifactId>
                                    <version>${project.version}</version>
                                    <packaging>jar</packaging>
                                    <description>Uber jar for fast loads into Cassandra</description>
                                    <generatePom>true</generatePom>
                                    <uniqueVersion>${project.distributionManagement.repository.uniqueVersion}</uniqueVersion>
                                    <updateReleaseInfo>true</updateReleaseInfo>
                                </configuration>
                            </execution>

                            <!-- This ensures that the "really executable" binary gets installed as a Maven artifact to the remote Maven repo -->
                            <execution>
                                <id>executable-binary-deployment</id>
                                <goals>
                                    <goal>deploy-file</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <repositoryId>${project.distributionManagement.repository.id}</repositoryId>
                                    <url>${project.distributionManagement.repository.url}</url>
                                    <file>target/${project.build.finalName}</file>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${uber-jar-name}-binary</artifactId>
                                    <version>${project.version}</version>
                                    <packaging>sh</packaging>
                                    <description>Uber jar for fast loads into Cassandra</description>
                                    <generatePom>true</generatePom>
                                    <uniqueVersion>${project.distributionManagement.repository.uniqueVersion}</uniqueVersion>
                                    <updateReleaseInfo>true</updateReleaseInfo>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>